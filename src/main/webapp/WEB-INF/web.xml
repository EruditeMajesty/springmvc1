<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>Archetype Created Web Application</display-name>
	<!-- Spring和mybatis的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-mybatis.xml</param-value>
	</context-param>
	<!-- 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- sitemech过滤器 -->
	<!--   <filter>
	    <filter-name>sitemesh</filter-name>
	    <filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
	  </filter>
	  <filter-mapping>
	    <filter-name>sitemesh</filter-name>
	    <url-pattern>/*</url-pattern>
	  </filter-mapping> -->
	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- Spring MVC 前端控制器 -->
	<servlet>
		<servlet-name>springmvc1</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
		<!-- 如果不配置这个就会默认加载WEB-INF下的servlet名称-servlet.xml文件(SpringMVC-servlet.xml) -->
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc1</servlet-name>
		<!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
		<!-- 
			配置方式
			第一种：*.action，当访问以action结尾的时候由DispatcherServlet解析
			第二种：/，所有的访问均有DispatcherServlet解析，对于静态文件的解析不需要DispatcherServlet解析，
					此种配置可以实现RESTful风格的url
		 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
	<!-- 配置SESSION超时，单位是分钟 -->
	<session-config>
		<session-timeout>15</session-timeout>
	</session-config>

</web-app>
